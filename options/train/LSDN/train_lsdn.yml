# general settings
# name: 001_LSDN  # initialization, area, nolog
# name: 002_LSDN  # point 
# name: 003_LSDN  # area, lr 4e-5
# name: 004_LSDN  # ganloss, lr 4e-5
# name: 005_LSDN  # point, lr 4e-5, L1+mmssim
# name: 006_LSDN_point_sum  # point, ganloss, sum l1
# name: 007_LSDN_point_gan_nogamma  # point, ganloss, nogamma
# name: 008_LSDN_point_l1  # point, l1
# name: 009_LSDN_area_mean  # area, l1+mmssim+gan, mean, meanl1
# name: 0010_LSDN_point_mean  # point, l1+mmssim+gan, mean, meanl1
# name: 0011_LSDN_area_sum  # area, l1+mmssim+gan, sum, suml1
name: 0012_LSDN_realtimerender  # area, l1+mmssim+gan, on-the-fly-renderer

model_type: SurfaceNetModel
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 10

# dataset and data loader settings
datasets:
  train:
    name: areaDataset
    type: areaDataset
    brdf_args:
      nbRendering: 1
      size: 256
      order: pndrs
      toLDR: True
    light_args:
      type: RectLighting
      # texture: tmp/0.png
    # data_path: /home/hdr/disks/D/Datasets/svBRDFs/trainBlended
    data_path: /home/sda/svBRDFs/trainBlended #Ruby
    rendering_path: /home/sda/svBRDFs/
    light_mode: area
    input_mode: render
    gamma: true
    io_backend: 
      type: disk
    # data loader
    use_shuffle: true
    num_worker_per_gpu: 6
    batch_size_per_gpu: 6
    dataset_enlarge_ratio: 1
    prefetch_mode: cuda
    pin_memory: true

  val:
    name: areaDataset
    type: areaDataset
    brdf_args:
      nbRendering: 1
      size: 256
      order: pndrs
      toLDR: True
    light_args:
      type: RectLighting
      # texture: tmp/0.png
    # data_path: /home/hdr/disks/D/Datasets/svBRDFs/testBlended
    gamma: true
    data_path: /home/sda/svBRDFs/testBlended
    rendering_path: /home/sda/svBRDFs/
    light_mode: area
    input_mode: render
    io_backend: 
      type: disk
    len: 14

# network structures
network_g:
  type: SurfaceNet
  brdf_args:
    nbRendering: 3
    size: 256
    order: pndrs
    toLDR: True
  outputMapping:
    Normal: 3
    Diffuse: 3
    Roughness: 1
    Specular: 3

network_d:
  type: PatchDiscriminator

path:
  # pretrain_network_g: ~
  strict_load_g: true
  resume_state: /home/sda/klkjjhjkhjhg/experiments/0012_LSDN_realtimerender/training_states/250000.state
# training settings
train:
  optim_g:
    type: Adam
    lr: !!float 4e-5
    weight_decay: 0
    betas: [0.9, 0.999]
  optim_d:
    type: Adam
    lr: !!float 4e-5
    weight_decay: 0
    betas: [0.9, 0.999]
  # scheduler:
  #   type: CosineAnnealingRestartLR
  #   periods: [20000, 30000, 100000, 200000, 300000]
  #   restart_weights: [1, 0.5, 0.5, 0.5, 0.5]
  #   eta_min: !!float 1e-7
  # scheduler:
  #   type: CosineAnnealingRestartLR
  #   periods: [10000, 10000, 30000, 100000, 150000, 300000]
  #   restart_weights: [1, 0.5, 0.5, 0.5, 0.5, 0.2]
  #   eta_min: !!float 1e-7
  scheduler:
    type: MultiStepRestartLR
    milestones: [350000, 600000]
    # milestones: [1,5,10,15]
  # opt_d_every: 10
  total_iter: 600000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1
    reduction: sum
  msssim_opt:
    type: MSSSIMLoss
    window_size: 11
    normaliza: True
    loss_weight: 0.88
  # render_opt:
  #   type: L1LogLoss
  #   loss_weight: 0.2
  #   reduction: mean
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: 0.15

  # hyperparameter
  # alpha: 0.15
  # belta: 0.88
  # losses
  # cos_opt:
  #   type: CosineLoss
  #   loss_weight: 0.5
  #   reduction: mean

# validation settings
val:
  val_freq: !!float 2e4
  save_img: true

  metrics:
    # cosine: # metric name, can be arbitrary
    #   type: cos
    #   weight: 2
    pixel: # metric name, can be arbitrary
      type: pix
      weight: 1

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e4
  use_tb_logger: true